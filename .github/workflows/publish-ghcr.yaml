name: Build, Push and Publish Docker Images

# Configures this workflow to run every time a change is pushed to the branch called `main`.
on:
  push:
    branches:
      - main

# Defines custom environment variables for the workflow.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: fastapi-hotmart-challenge
  IMAGE_NAME_STREAMLIT: streamlit-hotmart-challenge

jobs:
  build-and-push-api-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      # Extract metadata (tags, labels) for Docker - API
      - name: Extract metadata (tags, labels) for Docker - API
        id: meta_api
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_API }}

      # Build and push Docker image - API
      - name: Build and push Docker image - API
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile_API
          push: true
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}

      # Deploy Containers for API on Render
      - name: Deploy Containers for API
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_API }}

  build-and-push-streamlit-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      # Extract metadata (tags, labels) for Docker - Streamlit
      - name: Extract metadata (tags, labels) for Docker - Streamlit
        id: meta_streamlit
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_STREAMLIT }}

      # Build and push Docker image - Streamlit
      - name: Build and push Docker image - Streamlit
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile_Streamlit
          push: true
          tags: ${{ steps.meta_streamlit.outputs.tags }}
          labels: ${{ steps.meta_streamlit.outputs.labels }}

      # Deploy Containers for Streamlit on Render
      - name: Deploy Containers for Streamlit
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_STREAMLIT }}
